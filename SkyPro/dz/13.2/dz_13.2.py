'''**–ó–∞–¥–∞—á–∞ 1**

–ù–∞–ø–∏—à–∏—Ç–µ –∫–ª–∞—Å—Å `Rectangle` —Å –∞—Ç—Ä–∏–±—É—Ç–∞–º–∏ –¥–ª–∏–Ω—ã –∏ —à–∏—Ä–∏–Ω—ã.

–°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥ `perimeter()` –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–µ—Ä–∏–º–µ—Ç—Ä–∞
 –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –∏ –º–µ—Ç–æ–¥ `area()` –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏
  –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.

–°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥ `display()`, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–ª–∏–Ω—É,
 —à–∏—Ä–∏–Ω—É, –ø–µ—Ä–∏–º–µ—Ç—Ä –∏ –ø–ª–æ—â–∞–¥—å —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ `Rectangle`.'''

class Rectangle:

    def __init__(self, dlin, shir):
        self.dlin = dlin
        self.shir = shir

    def perimeter(self):
        return self.dlin + self.shir * 2

    def area(self):
        return self.dlin * self.shir

    def display(self):
        return f'{self.dlin}{self.shir}{self.perimeter()}{self.area()}'


pr = Rectangle(33, 33)
print(pr.perimeter())
print(pr.area())
print(pr.display())

'''**–ó–∞–¥–∞—á–∞ 2**

–°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å `Person`, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º –¥–≤–∞ –∞—Ç—Ä–∏–±—É—Ç–∞: –∏–º—è –∏
 –≤–æ–∑—Ä–∞—Å—Ç.

–°–æ–∑–¥–∞–π—Ç–µ –º–µ—Ç–æ–¥-–∫–ª–∞—Å—Å–∞ `fromBirthYear` —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º
 —Å–ø–æ—Å–æ–±–æ–º —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞ `Person` - –∫–æ–≥–¥–∞
  —É–∫–∞–∑–∞–Ω –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è.

```python
person = Person('–ò–≤–∞–Ω', 19)
person.display()

person1 = Person.fromBirthYear('–ù–∏–∫–æ–ª–∞–π',  2000)
person1.display()

# –≤—ã–≤–æ–¥
–ò–≤–∞–Ω. –í–æ–∑—Ä–∞—Å—Ç: 19
–ù–∏–∫–æ–ª–∞–π. –í–æ–∑—Ä–∞—Å—Ç: 23
```

<aside>
üí° –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –≥–æ–¥ –º–æ–∂–Ω–æ —Ç–∞–∫:
`from datetime import date`
`print(date.today().year)`
</aside>'''

from datetime import date

class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age

    @classmethod
    def fromBirthYear(cls, name, age_birt):
        birth = date.today().year - age_birt
        return Person(name, birth)

    def display(self):
        return f'{self.name} {self.age}'


person = Person('–ò–≤–∞–Ω', 19)
print(person.display())
person1 = Person.fromBirthYear('–ù–∏–∫–æ–ª–∞–π',  2000)
print(person1.display())
print(date.today().year)
# –ò–≤–∞–Ω. –í–æ–∑—Ä–∞—Å—Ç: 19
# –ù–∏–∫–æ–ª–∞–π. –í–æ–∑—Ä–∞—Å—Ç: 23
# <aside>
# üí° –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –≥–æ–¥ –º–æ–∂–Ω–æ —Ç–∞–∫:
# `from datetime import date`
# `print(date.today().year)`
# </aside>

'''**–ó–∞–¥–∞—á–∞ 3**

–í –∑–∞–¥–∞—á–µ 2 —Å–¥–µ–ª–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏. –ù–∞–ø–∏—Å–∞—Ç—å –∫ –Ω–∏–º
 —Å–µ—Ç—Ç–µ—Ä—ã, —á—Ç–æ–±—ã –∏–º—è –±—ã–ª–æ —Å—Ç—Ä–æ–∫–æ–π –∏ —Å–æ–¥–µ—Ä–∂–∞–ª–æ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã,
  –∞ –≤–æ–∑—Ä–∞—Å—Ç –±—ã–ª –±–æ–ª—å—à–µ –Ω—É–ª—è –∏ –º–µ–Ω—å—à–µ 120.
'''

from datetime import date

class Person:
    def __init__(self, name, age):
        self.__name = name
        self.__age = age

    @classmethod
    def fromBirthYear(cls, name, age_birt):
        birth = date.today().year - age_birt
        return Person(name, birth)

    @property
    def display(self):
        return f'{self.__name} {self.__age}'

    @display.setter
    def display(self, name, age):
        if name.isalpha():
            self.__name = str(name)
        elif age > 0 and age < 120:
            self.__age = age


person = Person('–ò–≤–∞–Ω', 19)
print(person.display)
person1 = Person.fromBirthYear('–ù–∏–∫–æ–ª–∞–π',  2000)
print(person1.display)
print(date.today().year)